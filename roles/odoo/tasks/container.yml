- name: odoo compose | add odoo directory
  file:
    path: "/data/odoo"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    state: directory
  become: yes

- name: odoo compose | add odoo config directory
  file:
    path: "/data/odoo/config"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    state: directory

- name: odoo compose | add odoo config file
  template:
    src: "templates/odoo.conf"
    dest: "/data/odoo/config/odoo.conf"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: odoo compose | add odoo addons directory
  file:
    path: "/data/odoo/addons"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    state: directory

- name: odoo compose | add odoo pgdata directory
  file:
    path: "/data/odoo/pgdata"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    state: directory

- name: make sure required docker package is installed
  pip:
    name: '{{ item }}'
    state: present
  with_items:
    - docker=={{ py_docker_version }}
    - docker-compose=={{ docker_compose_version }}
  become: yes

- name: docker-compose odoo service
  docker_service:
    project_name: odoo
    definition:
      version: '2'
      services:
        web:
          image: odoo:12.0
          depends_on:
            - db
          ports:
            - "8069:8069"
          restart: always
          volumes:
            - odoo-web-data:/var/lib/odoo
            - /data/odoo/config:/etc/odoo
            - /data/odoo/addons:/mnt/extra-addons
          labels:
            - "traefik.frontend.rule=Host:{{ odoo_hostname }}" #;AddPrefix:/VirtualHostBase/https/{{ odoo_hostname }}/VirtualHostRoot"
        db:
          image: postgres:10
          restart: always
          environment:
            - POSTGRES_PASSWORD=odoo
            - POSTGRES_USER=odoo
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_DB=postgres
          volumes:
            - odoo-db-data:/var/lib/postgresql/data/pgdata
      volumes:
        odoo-web-data:
        odoo-db-data:
      networks:
        default:
          external:
            name: proxy
  # assert:
  #   that:
  #     - "web.odoo_web_1.state.running"
  #     - "db.odoo_db_1.state.running"


- name: odoo compose | add odoo backup directory
  file:
    path: "/backups/odoo"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    state: directory
  become: yes

# add cron to backup pgdata
- name: docker-compose start backup at 2:10am.
  cron:
    name: "backup odoo instance"
    minute: "10"
    hour: "2"
    job: "docker exec -t odoo_db_1 pg_dumpall -c -U odoo > /backups/odoo/backup_dump.sql"
    user: "{{ username }}"
  become: yes
  tags: 
    - odoo
    - cron
