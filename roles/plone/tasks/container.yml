- name: plone docker-compose | add plone directory
  file:
    path: "/plone"
    owner: plone
    group: plone
    mode: 0755
    state: directory
  become: yes
  tags:
    - plone

- name: plone docker-compose | add plone reload script
  template:
    src: reload.sh.j2
    dest: "/plone/reload.sh"
    owner: plone
    group: plone
    mode: 0755
  become: yes
  tags:
    - plone

- name: plone docker-compose | add plone {{ project_id }} directory
  file:
    path: "/plone/{{ project_id }}"
    owner: plone
    group: plone
    mode: 0755
    state: directory
  become: yes
  tags:
    - plone

- name: plone docker-compose | add plone config directory
  file:
    path: "{{ item }}"
    owner: plone
    group: plone
    mode: 0755
    state: directory
  with_items:
    - "/data/{{ project_id }}"
    - "/data/{{ project_id }}/log"
    - "/data/{{ project_id }}/blobstorage"
    - "/data/{{ project_id }}/filestorage"
  become: yes
  tags:
    - plone

- name: plone docker-compose |  make sure required docker package is installed
  pip:
    name: '{{ item }}'
    state: present
  with_items:
    - docker=={{ py_docker_version }}
    - docker-compose=={{ docker_compose_version }}
  become: yes
  tags:
    - plone

- name: plone docker-compose |  set docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: "/plone/{{ project_id }}/docker-compose.yml"
    owner: plone
    group: plone
    mode: 0700
  # notify: reload {{ project_id }}
  become: yes
  tags: plone

- name: docker-compose plone {{ project_id }} service
  docker_service:
    project_name: '{{ project_id }}'
    pull: yes
    project_src: "/plone/{{ project_id }}"
  # notify: reload {{ project_id }}
  become: true
  become_user: plone
  tags:
    - plone
    - update
  # asse0rt:
  #   that:
  #     - "web.plone_web_1.state.running"
  #     - "db.plone_db_1.state.running"


# add cron to backup pgdata
